// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  name        String        @unique
  email       String        @unique
  age         Int           @default(20)
  profile     Profile?
  posts       Post[]        @relation("authorRelationship")
  likedPosts  Post[]        @relation("likedRelationship")
  nationality Nationality[]
}

model Profile {
  id         String   @id @default(uuid())
  profilePic String
  location   String
  joinDate   DateTime
  // Not the field used here must be a unique field, the field form
  // the other table that is in this case id field from User table
  // name and email can also be used here as they are unique
  user       User     @relation(fields: [userId], references: [id])
  // the userId must be unique in a one to one relationship
  userId     String   @unique
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(false)
  created   DateTime @default(now())
  author    User     @relation("authorRelationship", fields: [authorId], references: [id])
  authorId  String
  // when we have more than on relation, we need to specify the names of those relations
  // the name is the string argument we pass in to the @relation() function
  likedBy   User?    @relation("likedRelationship", fields: [likedById], references: [id])
  likedById String?
}

// this will create a pivot table in the background
model Nationality {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
}
